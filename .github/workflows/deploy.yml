name: Build and Deploy Angular App to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_CONTAINER_REGISTRY: prasadbhalerao
  CONTAINER_NAME: mcart-angularapp
  RESOURCE_GROUP: Mcart-RG
  CLUSTER_NAME: Mcart-AKS-Cluster

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies and build
        run: |
          npm install
          npm run build --prod

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }} .
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Set Azure Subscription
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing

      - name: Set KUBECONFIG
        run: |
          export KUBECONFIG=$HOME/.kube/config

      - name: Debug Kubernetes Context
        run: |
          kubectl config view
          kubectl config current-context
          kubectl get nodes

      - name: Replace image tag in Kubernetes manifests
        run: |
          sed -i "s|\${SHA_TAG}|${{ github.sha }}|g" manifests/deployment.yaml

       # Apply Kubernetes Manifests
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f manifests/

      - name: Verify Deployment
        run: |
          kubectl get pods -n default
